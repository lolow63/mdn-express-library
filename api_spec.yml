openapi: 3.1.0
x-stoplight:
  id: k7szf3iep70jn
info:
  title: LocalLibraryAPI
  version: '1.0'
  summary: Informations about book available at the local library
  description: 'Get the current books available at the library, search by title, author and genre. Check for book status and number of copies. Manage the current inventory with CRUD operations on the database. Manage status and return dates.'
  contact:
    name: Support
    url: 'http://localhost:3000/collection'
    email: support@library.com
  license:
    name: Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
    url: 'https://creativecommons.org/licenses/by-sa/4.0/'
servers:
  - url: 'http://localhost:3000/collection'
    description: dev
paths:
  /home:
    get:
      summary: Home Page
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    x-stoplight:
                      id: jm8t9ltk920um
                  book_count:
                    type: number
                    x-stoplight:
                      id: g4hzi2xfiu66s
                  book_instance-count:
                    type: number
                    x-stoplight:
                      id: 2fjlxzpvsspol
                  book_instance_available_count:
                    type: number
                    x-stoplight:
                      id: p6lp0kg90ff93
                  author_count:
                    type: number
                    x-stoplight:
                      id: vugjqtdet37g5
                  genre_count:
                    type: number
                    x-stoplight:
                      id: b30lz42zegg0q
              examples:
                Example 1:
                  value:
                    title: Local Library Home
                    book_count: 7
                    book_instance-count: 11
                    book_instance_available_count: 5
                    author_count: 5
                    genre_count: 3
      operationId: get-home
      x-stoplight:
        id: um2661wh00wyq
      description: "**Display the home page with the count of:** \r\n- books \r\n- book instances\r\n- available book instances\r\n- authors genres."
    parameters: []
  /book/create:
    get:
      summary: Create a Book
      tags:
        - Book endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
      operationId: get-book-create
      x-stoplight:
        id: leqorl7k4emfn
      description: "Paths:\r\n\r\n/book/create <br>\r\n[Operation]: GET <br>\r\nOperation ID: create-book <br>\r\nDescription: Create a new book entry in the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        description: "req.body needs to provide with the required properties of our schema. <br>\r\n_id is automatically generated by our database upon creation of the new entry."
    post:
      summary: Create a Book
      tags:
        - Book endpoints
      responses:
        '201':
          description: Created
      operationId: post-book-create
      x-stoplight:
        id: xfy7tewie4nx7
      description: "Paths:\r\n\r\n/book/create <br>\r\n[Operation]: POST <br>\r\nOperation ID: create-book <br>\r\nDescription: Create a new book entry in the local library."
  '/book/{id}/delete':
    get:
      summary: Delete Book
      tags:
        - Book endpoints
      responses:
        '204':
          description: No Content
      operationId: 'get-book-:id-delete'
      x-stoplight:
        id: 0w7wtsp6mjmm5
      description: "Paths:\r\n\r\n/book/:id/delete <br>\r\n[Operation]: GET <br>\r\nOperation ID: delete-book <br>\r\nDescription: Delete a book from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
    post:
      summary: Delete Book
      tags:
        - Book endpoints
      responses:
        '204':
          description: No Content
      operationId: 'post-book-:id-delete'
      x-stoplight:
        id: 701h3jgxqlwvj
      description: "Paths:\r\n\r\n/book/:id/delete <br>\r\n[Operation]: POST <br>\r\nOperation ID: delete-book <br>\r\nDescription: Delete a book from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the book
  '/book/{id}/update':
    get:
      summary: Update Book
      tags:
        - Book endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
      operationId: 'get-book-:id-update'
      x-stoplight:
        id: 9vng07tz7vmhh
      description: "Paths:\r\n\r\n/book/:id/update <br>\r\n[Operation]: GET <br>\r\nOperation ID: update-book <br>\r\nDescription: Update a book from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        description: ''
    post:
      summary: Update Book
      tags:
        - Book endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
      operationId: 'post-book-:id-update'
      x-stoplight:
        id: cqlitca9qatas
      description: "Paths:\r\n\r\n/book/:id/update <br>\r\n[Operation]: POST <br>\r\nOperation ID: update-book <br>\r\nDescription: Update a book from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the book
  '/book/{id}':
    get:
      summary: Get a Book
      tags:
        - Book endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
                x-examples:
                  Example 1:
                    _id: 65dc4491641f832ddf8ffc8e
                    title: 'The Name of the Wind (The Kingkiller Chronicle, #1)'
                    author: 65dc4490641f832ddf8ffc84
                    summary: I have stolen princesses back from sleeping barrow kings. I burned dowâ€¦
                    isbn: '9781473211896'
                    genre: 65dc4490641f832ddf8ffc7e
              examples:
                Example:
                  $ref: '#/components/examples/book'
      operationId: 'get-book-:id'
      x-stoplight:
        id: nvu23n7la80eo
      description: "Paths:\r\n\r\n/book/:id <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-book <br>\r\nDescription: get a book from the local library."
      requestBody:
        content: {}
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the book
  /books:
    get:
      summary: Get all books
      tags:
        - Book endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  x-stoplight:
                    id: 4anatgg1r927m
                  type: object
                  required:
                    - _id
                    - title
                    - author
                  properties:
                    _id:
                      type: string
                      x-stoplight:
                        id: oq31v5hwm8ecl
                      example: "'65dc4490641f832ddf8ffc84'"
                    title:
                      type: string
                      x-stoplight:
                        id: diq7cvk46efzz
                      example: "'The Name of the Wind (The Kingkiller Chronicle, #1)'"
                    author:
                      type: object
                      x-stoplight:
                        id: 1b75pkx1t7ee7
                      required:
                        - _id
                        - first_name
                        - family_name
                      properties:
                        _id:
                          type: string
                          x-stoplight:
                            id: 07s0o120me4w6
                          example: "'65dc4491641f832ddf8ffc8f'"
                        first_name:
                          type: string
                          x-stoplight:
                            id: dmiyhj58kyrvv
                          example: "'Patrick'"
                        family_name:
                          type: string
                          x-stoplight:
                            id: 26xveho486v6q
                          example: "'Rothfuss'"
                        date_of_birth:
                          type: string
                          x-stoplight:
                            id: 4u1rncjo1vqzz
                          format: date-time
                          example: '1932-11-07T14:00:00.000Z'
                        date_of_death:
                          type: string
                          x-stoplight:
                            id: 7bv63fa9gqauj
                          example: '1973-06-06T00:00:00.000Z'
                          format: date-time
              examples:
                Example 1:
                  value:
                    - _id: 65dc4490641f832ddf8ffc84
                      title: 'The Name of the Wind (The Kingkiller Chronicle, #1)'
                      author:
                        _id: 65dc4491641f832ddf8ffc8f
                        first_name: Patrick
                        family_name: Rothfuss
                        date_of_birth: '1973-06-06T00:00:00.000Z'
                        date_of_death: '1932-11-07T14:00:00.000Z'
                    - _id: 65dc4491641f832ddf8ffca6
                      title: "The Wise Man's Fear (The Kingkiller Chronicle, #2)"
                      author:
                        _id: 65dc4491641f832ddf8ffc8f
                        first_name: Bob
                        family_name: Billings
                    - _id: 65dc4490641f832ddf8ffc84
                      title: The Slow Regard of Silent Things (Kingkiller Chronicle)
                      author:
                        _id: 65dc4491641f832ddf8ffc8f
                        first_name: Jim
                        family_name: Jones
                        date_of_birth: '1971-12-16T00:00:00.000Z'
      operationId: get-books
      x-stoplight:
        id: luvpz2sl44q33
      description: "**Path:** /books <br>\r\n**[Operation]**: GET <br>\r\n**Operation ID** : get-all-books <br>\r\n**Description**: returns a list of books from the local library."
  /author/create:
    get:
      summary: Create an Author
      tags:
        - Author endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
      operationId: get-author-create
      x-stoplight:
        id: mo5dhx5gg02h8
      description: "Paths:\r\n\r\n/author/create <br>\r\n[Operation]: GET <br>\r\nOperation ID: create-author <br>\r\nDescription: Create a new author entry in the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        description: "req.body needs to provide with the required properties of our schema. <br>\r\n_id is automatically generated by our database upon creation of the new entry."
    post:
      summary: Create an Author
      tags:
        - Author endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
      operationId: post-author-create
      x-stoplight:
        id: qjozgx9rcukx6
      description: "Paths:\r\n\r\n/author/create <br>\r\n[Operation]: POST <br>\r\nOperation ID: create-author <br>\r\nDescription: Create a new author entry in the local library."
  '/author/{id}/delete':
    get:
      summary: Delete an Author
      tags:
        - Author endpoints
      responses:
        '204':
          description: No Content
      operationId: 'get-author-:id-delete'
      x-stoplight:
        id: 7l7t62s92arb2
      description: "Paths:\r\n\r\n/author/:id/delete <br>\r\n[Operation]: GET <br>\r\nOperation ID: delete-author <br>\r\nDescription: Delete an author from the local library."
    post:
      summary: Delete an Author
      tags:
        - Author endpoints
      responses:
        '204':
          description: No Content
      operationId: 'post-author-:id-delete'
      x-stoplight:
        id: hbmc4oy3a7vm8
      description: "Paths:\r\n\r\n/author/:id/delete <br>\r\n[Operation]: POST <br>\r\nOperation ID: delete-author <br>\r\nDescription: Delete an author from the local library."
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the author
  '/author/{id}/update':
    get:
      summary: Update an Author
      tags:
        - Author endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
      operationId: 'get-author-:id-update'
      x-stoplight:
        id: cbyaw1e8vtded
      description: "Paths:\r\n\r\n/author/:id/update <br>\r\n[Operation]: GET <br>\r\nOperation ID: update-author <br>\r\nDescription: Update an author from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: The ID of the author
    post:
      summary: Update an Author
      tags:
        - Author endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
      operationId: 'post-author-:id-update'
      x-stoplight:
        id: msl1xoeyh9rce
      description: "Paths:\r\n\r\n/author/:id/update <br>\r\n[Operation]: POST <br>\r\nOperation ID: update-author <br>\r\nDescription: Update an author from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
  '/author/{id}':
    get:
      summary: Get an Author
      tags:
        - Author endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
      operationId: 'get-author-:id'
      x-stoplight:
        id: 8rz0x1po3xs6c
      description: "Paths:\r\n\r\n/author/:id <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-author <br>\r\nDescription: get an author from the local library."
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the author
  /authors:
    get:
      summary: Get all Authors
      tags:
        - Author endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
                  x-stoplight:
                    id: f1noobnz2x9ph
      operationId: get-authors
      x-stoplight:
        id: jplc0myxqrkc8
      description: "Paths:\r\n\r\n/authors <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-all-authors <br>\r\nDescription: get all authors from the local library."
  /genre/create:
    get:
      summary: Create a Genre
      tags:
        - Genre endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
      operationId: get-genre-create
      x-stoplight:
        id: y27qfnch5o2mm
      description: "Paths:\r\n\r\n/genre/create <br>\r\n[Operation]: GET <br>\r\nOperation ID: create-genre <br>\r\nDescription: Create a new genre entry in the local library."
      requestBody:
        description: "req.body needs to provide with the required properties of our schema. <br>\r\n_id is automatically generated by our database upon creation of the new entry."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
    post:
      summary: Create a Genre
      tags:
        - Genre endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
      operationId: post-genre-create
      x-stoplight:
        id: 5ts0tnx2vvelj
      description: "Paths:\r\n\r\n/genre/create <br>\r\n[Operation]: POST <br>\r\nOperation ID: create-genre <br>\r\nDescription: Create a new genre entry in the local library."
      requestBody:
        description: "req.body needs to provide with the required properties of our schema. <br>\r\n_id is automatically generated by our database upon creation of the new entry."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
  '/genre/{id}/delete':
    get:
      summary: Delete a Genre
      tags:
        - Genre endpoints
      responses:
        '204':
          description: No Content
      operationId: 'get-genre-:id-delete'
      x-stoplight:
        id: 5n79p754rs9n3
      description: "Paths:\r\n\r\n/genre/:id/delete <br>\r\n[Operation]: GET <br>\r\nOperation ID: delete-genre <br>\r\nDescription: Delete a genre from the local library."
    post:
      summary: Delete a Genre
      tags:
        - Genre endpoints
      responses:
        '204':
          description: No Content
      operationId: 'post-genre-:id-delete'
      x-stoplight:
        id: 03lwu6q91scb3
      description: "Paths:\r\n\r\n/genre/:id/delete <br>\r\n[Operation]: POST <br>\r\nOperation ID: delete-genre <br>\r\nDescription: Delete a genre from the local library."
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the genre
  '/genre/{id}/update':
    post:
      summary: Update a Genre
      tags:
        - Genre endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
      operationId: 'post-genre-:id-update'
      x-stoplight:
        id: 24zbnzu05ry88
      description: "Paths:\r\n\r\n/genre/:id/update <br>\r\n[Operation]: GET <br>\r\nOperation ID: update-genre <br>\r\nDescription: Update a genre from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Genre'
    get:
      summary: Update a Genre
      tags:
        - Genre endpoints
      responses:
        '200':
          description: OK
      operationId: 'get-genre-:id-update'
      x-stoplight:
        id: ncxzkvahjioqm
      description: "Paths:\r\n\r\n/genre/:id/update <br>\r\n[Operation]: POST <br>\r\nOperation ID: update-genre <br>\r\nDescription: Update a genre from the local library."
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the genre
  '/genre/{id}':
    get:
      summary: Get a Genre
      tags:
        - Genre endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genre'
      operationId: 'get-genre-:id'
      x-stoplight:
        id: 27bfnxqchfqhn
      description: "Paths:\r\n\r\n/genre/:id <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-genre <br>\r\nDescription: get a genre from the local library."
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the genre
  /genres:
    get:
      summary: Get all Genres
      tags:
        - Genre endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genre'
                  x-stoplight:
                    id: 3571nxt7uv4tv
      operationId: get-genres
      x-stoplight:
        id: c7yp7v12v1b63
      description: "Paths:\r\n\r\n/genres <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-all-genres <br>\r\nDescription: get all genres from the local library."
  /bookinstance/create:
    get:
      summary: Create a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookinstance'
      operationId: get-bookinstance-create
      x-stoplight:
        id: 46krxyhi675tl
      description: "Paths:\r\n\r\n/bookinstance/create <br>\r\n[Operation]: GET <br>\r\nOperation ID: create-bookinstance <br>\r\nDescription: Create a new bookinstance entry in the local library."
      requestBody:
        description: "req.body needs to provide with the required properties of our schema. <br>\r\n_id is automatically generated by our database upon creation of the new entry."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookinstance'
    post:
      summary: Create a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookinstance'
      operationId: post-bookinstance-create
      x-stoplight:
        id: 22fkjgtvhrczd
      description: "Paths:\r\n\r\n/bookinstance/create <br>\r\n[Operation]: POST <br>\r\nOperation ID: create-bookinstance <br>\r\nDescription: Create a new bookinstance entry in the local library."
      requestBody:
        description: "req.body needs to provide with the required properties of our schema. <br>\r\n_id is automatically generated by our database upon creation of the new entry."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookinstance'
  '/bookinstance/{id}/delete':
    get:
      summary: Delete a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '204':
          description: No Content
      operationId: 'get-bookinstance-:id-delete'
      x-stoplight:
        id: u64t9nq71x7qm
      description: "Paths:\r\n\r\n/bookinstance/:id/delete <br>\r\n[Operation]: GET <br>\r\nOperation ID: delete-bookinstance <br>\r\nDescription: Delete a bookinstance from the local library."
    post:
      summary: Delete a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '204':
          description: No Content
      operationId: 'post-bookinstance-:id-delete'
      x-stoplight:
        id: oo40vaq62iygs
      description: "Paths:\r\n\r\n/bookinstance/:id/delete <br>\r\n[Operation]: POST <br>\r\nOperation ID: delete-bookinstance <br>\r\nDescription: Delete a bookinstance from the local library."
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the book instance
  '/bookinstance/{id}/update':
    get:
      summary: Update a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookinstance'
      operationId: 'get-bookinstance-:id-update'
      x-stoplight:
        id: 46fq3qwf3qh2t
      description: "Paths:\r\n\r\n/bookinstance/:id/update <br>\r\n[Operation]: GET <br>\r\nOperation ID: update-bookinstance <br>\r\nDescription: Update a bookinstance from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookinstance'
    post:
      summary: Update a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookinstance'
      operationId: 'post-bookinstance-:id-update'
      x-stoplight:
        id: u0eo55j360hmx
      description: "Paths:\r\n\r\n/bookinstance/:id/update <br>\r\n[Operation]: POST <br>\r\nOperation ID: update-bookinstance <br>\r\nDescription: Update a bookinstance from the local library."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bookinstance'
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the book instance
  '/bookinstance/{id}':
    get:
      summary: Get a Book Instance
      tags:
        - Book Instance endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bookinstance'
      operationId: 'get-bookinstance-:id'
      x-stoplight:
        id: k5puzyjcd6uz0
      description: "Paths:\r\n\r\n/bookinstance/:id <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-bookinstance <br>\r\nDescription: get a bookinstance from the local library."
      requestBody:
        description: ''
        content: {}
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: The ID of the book instance
  /bookinstances:
    get:
      summary: Get all Book Instances
      tags:
        - Book Instance endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bookinstance'
                  x-stoplight:
                    id: 3h2ucg8okvj08
      operationId: get-bookinstances
      x-stoplight:
        id: o2ue7yywa99p8
      description: "Paths:\r\n\r\n/bookinstances <br>\r\n[Operation]: GET <br>\r\nOperation ID: get-all-bookinstances <br>\r\nDescription: get all bookinstances from the local library."
components:
  schemas:
    Book:
      type: object
      x-examples:
        Example 1:
          _id: 65dc4491641f832ddf8ffc8e
          title: 'The Name of the Wind (The Kingkiller Chronicle, #1)'
          author: 65dc4490641f832ddf8ffc84
          summary: I have stolen princesses back from sleeping barrow kings. I burned dowâ€¦
          isbn: '9781473211896'
          genre: 65dc4490641f832ddf8ffc7e
      description: Schema for the books table
      required:
        - title
        - author
        - summary
        - isbn
      properties:
        _id:
          type: string
        title:
          type: string
        author:
          type: string
        summary:
          type: string
        isbn:
          type: string
        genre:
          type: string
    Author:
      type: object
      x-examples:
        Example 1:
          _id: 65dc4490641f832ddf8ffc84
          first_name: Patrick
          family_name: Rothfuss
          date_of_birth: '1973-06-06T00:00:00.000+00:00'
          date_of_death: '1992-04-06T00:00:00.000+00:00'
      description: Schema for the authors table
      required:
        - first_name
        - family_name
      properties:
        _id:
          type: string
        first_name:
          type: string
        family_name:
          type: string
        date_of_birth:
          type: string
        date_of_death:
          type: string
    Bookinstance:
      type: object
      x-examples:
        Example 1:
          _id: 65dc4491641f832ddf8ffc9c
          book: 65dc4491641f832ddf8ffc8e
          imprint: 'London Gollancz, 2014.'
          status: Available
          due_back: '2024-02-26T07:58:09.189+00:00'
      description: Schema for the bookinstances table
      required:
        - book
        - imprint
        - status
      properties:
        _id:
          type: string
        book:
          type: string
        imprint:
          type: string
        status:
          type: string
        due_back:
          type: string
    Genre:
      type: object
      x-examples:
        Example 1:
          _id: 65dc4490641f832ddf8ffc80
          name: French Poetry
      examples:
        - _id: 65dc4490641f832ddf8ffc80
          name: French Poetry
      description: Schema for the genres table
      required:
        - name
      properties:
        _id:
          type: string
        name:
          type: string
  securitySchemes: {}
  parameters: {}
  examples:
    book:
      value:
        title: Example
        description: Shared example
        type: object
        properties:
          id: 65dc4491641f832ddf8ffc8e
          title: 'The Name of the Wind (The Kingkiller Chronicle, #1)'
          author: 65dc4490641f832ddf8ffc84
          summary: I have stolen princesses back from sleeping barrow kings. I burned dowâ€¦
          isbn: '9781473211896'
          genre: 65dc4490641f832ddf8ffc7e
        required:
          - id
          - title
          - author
          - summary
          - isbn
tags:
  - name: Author endpoints
    description: Author endpoints
  - name: Book endpoints
    description: Book endpoints
  - name: Book Instance endpoints
    description: Book Instance endpoints
  - name: Genre endpoints
    description: Genre endpoints
